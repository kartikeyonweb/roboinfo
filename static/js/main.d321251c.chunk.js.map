{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","username","email","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filterdRobots","this","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAoBeA,EAnBJ,SAACC,GACZ,OACA,sBAAKC,UAAU,gDAAf,UACA,qBAAKC,IAAI,SAASC,IAAG,gCAA2BH,EAAMI,GAAjC,cACrB,gCACI,mCAAMJ,EAAMK,QACZ,4BAAIL,EAAMM,WACV,4BAAIN,EAAMO,eCoBCC,EAzBE,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAEnB,OAAQ,8BAGRA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACA,cAAC,EAAD,CACAR,GAAIK,EAAOG,GAAGR,GACbC,KAAMI,EAAOG,GAAGP,KACfE,MAAOE,EAAOG,GAAGL,MACjBD,SAAUG,EAAOG,GAAGN,UAJXM,SCYAC,EApBC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aACd,OACJ,qBAAKb,UAAU,MAAf,SACA,uBACAA,UAAU,mCACVc,KAAK,SAASC,YAAY,gBAC1BC,SAAUH,OCCKI,G,MARF,SAAClB,GACV,OACJ,qBAAKmB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKtB,EAAMuB,aC8CIC,E,kDA3CX,aACH,IAAD,8BACI,gBAkBJC,eAAe,SAACC,GACZ,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAlBxC,EAAKC,MAAM,CACXtB,OAAQ,GACRmB,YAAY,IAJhB,E,qDASA,WAAoB,IAAD,OACfI,MAAM,8CACJC,MAAK,SAAAC,GACL,OAAQA,EAASC,UAGtBF,MAAK,SAAAG,GACF,EAAKT,SAAS,CAAClB,OAAO2B,S,oBAO1B,WAAU,IAAD,OACCC,EAAgBC,KAAKP,MAAMtB,OAAO8B,QAAO,SAAA9B,GAC3C,OAAOA,EAAOJ,KAAKmC,cAAcC,SAAS,EAAKV,MAAMH,YAAYY,kBAIrE,OAEI,sBAAKvC,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWa,aAAcwB,KAAKb,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUhB,OAAQ4B,a,GArCRK,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d321251c.chunk.js","sourcesContent":["import React from 'react';\r\nconst Card=(props)=>{\r\nreturn(\r\n<div className='tc bg-white dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n<img alt='robots' src={`https://robohash.org/ ${props.id}?200x200`}/>\r\n<div>\r\n    <h2> {props.name}</h2>\r\n    <p>{props.username}</p>\r\n    <p>{props.email}</p>\r\n    </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots})=>{\r\n \r\nreturn( <div>\r\n    {\r\n\r\nrobots.map((user,i)=>{\r\n    return (\r\n    <Card key={i} \r\n    id={robots[i].id}\r\n     name={robots[i].name}\r\n      email={robots[i].email}\r\n      username={robots[i].username} \r\n      />\r\n      );\r\n\r\n}\r\n)\r\n}\r\n \r\n</div>\r\n);\r\n\r\n\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox=({searchChange})=>{\r\n    return(\r\n<div className='pa2'>\r\n<input \r\nclassName='pa3 ba b--green bg-lightest-blue'\r\ntype='search' placeholder='search ROBOTS'\r\nonChange={searchChange}\r\n\r\n\r\n\r\n/>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\nexport default SearchBox;","import React from 'react';\r\nconst Scroll=(props)=>{\r\n    return(\r\n<div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n    {props.children}</div>\r\n\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React,{Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\n\r\nclass App extends Component {\r\n    constructor()\r\n{\r\n    super()\r\n    this.state={\r\n    robots: [],\r\n    searchfield:''\r\n\r\n    }\r\n}  \r\n\r\ncomponentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n     .then(response=>{\r\n      return  response.json();\r\n    \r\n})\r\n.then(users=>{\r\n    this.setState({robots:users})\r\n});\r\n}\r\nonSearchChange=(event)=>{\r\n    this.setState({searchfield:event.target.value})\r\n}\r\n\r\nrender() {\r\n    const filterdRobots = this.state.robots.filter(robots=>{\r\n        return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        \r\n        })\r\n      \r\n    return(\r\n\r\n        <div className='tc'>\r\n        <h1 className='f1'> ROBOTS Info</h1>\r\n        <SearchBox searchChange={this.onSearchChange}/>\r\n        <Scroll>\r\n        <CardList robots={filterdRobots}/>\r\n            </Scroll>\r\n            </div>\r\n        );\r\n        }\r\n    }\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}